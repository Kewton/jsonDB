{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. About the Project Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#about-the-project","text":"","title":"About the Project"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"about/","text":"\u6982\u8981 \u74b0\u5883\u6e96\u5099 python -m venv .venv .venv\\Scripts\\activate.ps1 .venv\\Scripts\\python.exe -m pip install --upgrade pip pip install -r requirements.txt \u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb \u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea 'sample.py': from jsonDB import ValidatedSchemaFactory, BaseJsonDbORM, DoFactory class _MyData_Prop: name: str email: str data: dict class _MyData_Schema(_MyData_Prop, ValidatedSchemaFactory): pass class MyData_Do(_MyData_Prop, DoFactory): pass class MyJson_ORM(BaseJsonDbORM): schema = _MyData_Schema dbname = \"db2\" if __name__ == '__main__': # myJson_ORM = MyJson_ORM() data = MyData_Do() data.name = \"aaaaaaaaaa\" data.email = \"test@ma\" data.data = { \"test\":\"aaaaaaaaaaaaaaaaaaaaaaa\", \"hogehoge\":\"uoooooooooooooooooo\", \"aaa\": [ {\"a\":1}, {\"a\":2}, {\"a\":3}, {\"a\":4}, {\"a\":5} ] } MyJson_ORM().upsert(data) # myJson_ORM2 = MyJson_ORM() data2 = MyData_Do() data2.name = \"bbbbbbbbbbbbbbbbbbb\" data2.email = \"test@ma\" data2.data = { \"test\":\"aaaaaaaaaaaaaaaaaaaaaaa\", \"hogehoge\":\"uoooooooooooooooooo\", \"aaa\": [ {\"a\":11}, {\"a\":12}, {\"a\":13}, {\"a\":14} ] } MyJson_ORM().upsert(data2) query = MyData_Do() query.name = \"bbbbbbbbbbbbbbbbbbb\" for a in MyJson_ORM().jsondb.getByQuery(query.to_query_dict()): data = MyData_Do().from_json_dict(a) print(data.name) \u5b9f\u884c\u65b9\u6cd5 python sample.py \u5b9f\u884c\u7d50\u679c ./myjsondb\u30d5\u30a9\u30eb\u30c0\u306bdb2.json\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059 'db2.json': { \"data\": [ { \"registration_date\": \"20240306231242452892\", \"name\": \"aaaaaaaaaa\", \"email\": \"test@ma\", \"data\": { \"test\": \"aaaaaaaaaaaaaaaaaaaaaaa\", \"hogehoge\": \"uoooooooooooooooooo\", \"aaa\": [ { \"a\": 1 }, { \"a\": 2 }, { \"a\": 3 }, { \"a\": 4 }, { \"a\": 5 } ] }, \"id\": 218606492260928183 }, { \"registration_date\": \"20240306231242461246\", \"name\": \"bbbbbbbbbbbbbbbbbbb\", \"email\": \"test@ma\", \"data\": { \"test\": \"aaaaaaaaaaaaaaaaaaaaaaa\", \"hogehoge\": \"uoooooooooooooooooo\", \"aaa\": [ { \"a\": 11 }, { \"a\": 12 }, { \"a\": 13 }, { \"a\": 14 } ] }, \"id\": 198016610469183284 } ] }","title":"\u6982\u8981"},{"location":"about/#_1","text":"","title":"\u6982\u8981"},{"location":"about/#_2","text":"python -m venv .venv .venv\\Scripts\\activate.ps1 .venv\\Scripts\\python.exe -m pip install --upgrade pip pip install -r requirements.txt","title":"\u74b0\u5883\u6e96\u5099"},{"location":"about/#_3","text":"","title":"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb"},{"location":"about/#_4","text":"'sample.py': from jsonDB import ValidatedSchemaFactory, BaseJsonDbORM, DoFactory class _MyData_Prop: name: str email: str data: dict class _MyData_Schema(_MyData_Prop, ValidatedSchemaFactory): pass class MyData_Do(_MyData_Prop, DoFactory): pass class MyJson_ORM(BaseJsonDbORM): schema = _MyData_Schema dbname = \"db2\" if __name__ == '__main__': # myJson_ORM = MyJson_ORM() data = MyData_Do() data.name = \"aaaaaaaaaa\" data.email = \"test@ma\" data.data = { \"test\":\"aaaaaaaaaaaaaaaaaaaaaaa\", \"hogehoge\":\"uoooooooooooooooooo\", \"aaa\": [ {\"a\":1}, {\"a\":2}, {\"a\":3}, {\"a\":4}, {\"a\":5} ] } MyJson_ORM().upsert(data) # myJson_ORM2 = MyJson_ORM() data2 = MyData_Do() data2.name = \"bbbbbbbbbbbbbbbbbbb\" data2.email = \"test@ma\" data2.data = { \"test\":\"aaaaaaaaaaaaaaaaaaaaaaa\", \"hogehoge\":\"uoooooooooooooooooo\", \"aaa\": [ {\"a\":11}, {\"a\":12}, {\"a\":13}, {\"a\":14} ] } MyJson_ORM().upsert(data2) query = MyData_Do() query.name = \"bbbbbbbbbbbbbbbbbbb\" for a in MyJson_ORM().jsondb.getByQuery(query.to_query_dict()): data = MyData_Do().from_json_dict(a) print(data.name)","title":"\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea"},{"location":"about/#_5","text":"python sample.py","title":"\u5b9f\u884c\u65b9\u6cd5"},{"location":"about/#_6","text":"./myjsondb\u30d5\u30a9\u30eb\u30c0\u306bdb2.json\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059 'db2.json': { \"data\": [ { \"registration_date\": \"20240306231242452892\", \"name\": \"aaaaaaaaaa\", \"email\": \"test@ma\", \"data\": { \"test\": \"aaaaaaaaaaaaaaaaaaaaaaa\", \"hogehoge\": \"uoooooooooooooooooo\", \"aaa\": [ { \"a\": 1 }, { \"a\": 2 }, { \"a\": 3 }, { \"a\": 4 }, { \"a\": 5 } ] }, \"id\": 218606492260928183 }, { \"registration_date\": \"20240306231242461246\", \"name\": \"bbbbbbbbbbbbbbbbbbb\", \"email\": \"test@ma\", \"data\": { \"test\": \"aaaaaaaaaaaaaaaaaaaaaaa\", \"hogehoge\": \"uoooooooooooooooooo\", \"aaa\": [ { \"a\": 11 }, { \"a\": 12 }, { \"a\": 13 }, { \"a\": 14 } ] }, \"id\": 198016610469183284 } ] }","title":"\u5b9f\u884c\u7d50\u679c"}]}